# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.
[exclude_object]
[include KAMP_Settings.cfg]

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 260
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -10

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 22.709
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 285
# pressure_advance: 0.065

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 13000
max_z_velocity: 5
max_z_accel: 100

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -45
y_offset: -7
#z_offset: 0

[bed_mesh]
speed: 50
horizontal_move_z: 5
mesh_min: 15, 15
mesh_max: 212.5, 220
probe_count: 3, 3
algorithm: lagrange
fade_start: 1
fade_end: 10
fade_target: 0

[safe_z_home]
home_xy_position: 117.5, 117.5 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[bed_screws]
screw1: 33, 37
screw2: 203, 37
screw3: 203, 206
screw4: 33, 206

[screws_tilt_adjust]
screw1: 80.5, 46.8
screw1_name: Front left
screw2: 250.5, 46.8
screw2_name: Front right
screw3: 250.5, 215.8
screw3_name: Back right
screw4: 80.5, 215.8
screw4_name: Back left
horizontal_move_z: 10
speed: 50
screw_thread: CW-M3


[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    117.5, 117.5, 20  # an example

[gcode_macro CALIBRATE_BED_MESH]
description: Calibrate bed mesh
gcode:
  {% set bedTemp = params.BED_TEMP|default(60)|int %}
  M190 S{ bedTemp }
  M117 Heating bed to { bedTemp } degrees.

  {% if printer.homed_axes != 'XYZ' %}
		G28			#Home All Axes
	{% endif %}
  
  BED_MESH_CALIBRATE 
  SAVE_CONFIG

[gcode_macro CALIBRATE_BED_BEFORE]
description: Calibrate bed mesh before prints.
gcode:
  {% set bedTemp = params.BED_TEMP|int %}
  M190 S{ bedTemp }
  M117 Heating bed to { bedTemp } degrees...

  {% if printer.homed_axes != 'XYZ' %}
    M117 Homing axes...
		G28			#Home All Axes
	{% endif %}
  
  M117 Starting to calibrate bed mesh...
  BED_MESH_CALIBRATE 
  M117 Starting print...

[gcode_macro MANUAL_BED_LEVEL]
description: Manually level bed
gcode:
  G28
  BED_SCREWS_ADJUST

[gcode_macro AUTO_BED_LEVEL]
description: Auto level bed with screw adjustment
gcode:
  SCREWS_TILT_CALCULATE

[gcode_macro INPUT_SHAPER]
description: Run the input shaper tool for a certain axis.
gcode:
  {% set axis = params.AXIS|default("X") %}
  ACCELEROMETER_QUERY
  MEASURE_AXES_NOISE
  G28
  SHAPER_CALIBRATE AXIS={axis}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.686
#*# pid_ki = 1.139
#*# pid_kd = 1066.194
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.114
#*# pid_ki = 1.785
#*# pid_kd = 110.698
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.112500, -0.107500, 0.022500
#*# 	  0.035000, 0.007500, 0.092500
#*# 	  -0.030000, -0.057500, 0.055000
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 15.0
#*# x_count = 3
#*# max_y = 220.0
#*# mesh_x_pps = 2
#*# max_x = 212.5
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 68.4
#*# shaper_type_y = mzv
#*# shaper_freq_y = 35.6
#*#
#*# [bltouch]
#*# z_offset = 1.295
